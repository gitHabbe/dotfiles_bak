gui:
  theme:
    selectedLineBgColor:
      - underline
    selectedRangeBgColor:
      - underline
    optionsTextColor:
      - cyan

git:
  diffContextSize: 1
  paging:
    colorArg: always
    pager: delta --dark --paging=never

customCommands:
  - key: "C"
  - key: "<c-l>"
    description: "Commit with style"
    context: 'files'
    loadingText: 'Loading ...'
    command: 
      type=$(bash ~/.config/lazygit/HabCommits/echoFile.sh '{{ .Form.Type }}') &&
      emoji=$(jq -r --arg Type $type '.commitList[] | select(.alias == $Type).emoji' ~/.config/lazygit/HabCommits/commit-types.json) &&
      scope=$({{ if .Form.Scope }} printf "%s" "({{ .Form.Scope }})" {{ end }}) &&
      sepa=$(jq -r '.settings.separator' ~/.config/lazygit/HabCommits/commit-types.json) &&
      msg=$(printf "%s" "{{ .Form.CommitMessage }}") &&
      breaking=$({{ if .Form.Breaking }} printf "\n\n%s%s%s" "BREAKING CHANGE:" " " "{{ .Form.Breaking }}" {{ end }}) &&
      git commit -m "${emoji} ${type}${scope}${sepa}${msg}${breaking}"
    #      printf "%s" "${emoji} ${type}${scope}${sepa}${msg}${breaking}"
    showOutput: true
    prompts:
    - type: 'input'
      key: 'Type'
      title: "Input title:"
      suggestions:
        command: 'cat ~/.config/lazygit/HabCommits/CommitFile.txt'
        # command: 'bash ~/.config/lazygit/HabCommits/EchoFile.sh'
    - type: 'input'
      key: 'CommitMessage'
      title: "Commit message:"
    - type: "input"
      title: "Scope - Add '(<scope>)'"
      key: "Scope"
    - type: "input"
      key: "Breaking"
      title: "Breaking change - Add '!'"
#os:
      #editCommand: "nvim-nightly"
